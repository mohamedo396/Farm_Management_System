// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  role     String
}

model Field {
  fieldCode     String @id
  fieldName     String
  fieldLocation String
  fieldSize     String
  fieldImage1   String

  cropCode String?
  crop     Crop?   @relation(fields: [cropCode], references: [cropCode], onDelete: Cascade, onUpdate: Cascade)

  staff      Staff[]
  equipments Equipment[]
  logs       Log[]
}

model Crop {
  cropCode       String  @id
  commonName     String
  scientificName String
  image          String
  category       String
  season         String
  logs           Log[]
  fields         Field[]
}

model Staff {
  staffId     String   @id
  firstName   String
  lastName    String
  address     String
  designation String
  gender      String
  contact     String
  email       String
  vehicleId   String?
  vehicle     Vehicle? @relation(fields: [vehicleId], references: [vehicleId], onDelete: Cascade, onUpdate: Cascade)

  fieldCode String
  field     Field  @relation(fields: [fieldCode], references: [fieldCode], onDelete: Cascade, onUpdate: Cascade)

  logs StaffLog[]
}

model Equipment {
  equipmentId     String @id
  equipmentName   String
  equipmentType   String
  equipmentStatus String
  fieldCode       String
  field           Field  @relation(fields: [fieldCode], references: [fieldCode], onDelete: Cascade, onUpdate: Cascade)
}

model Vehicle {
  vehicleId     String  @id
  type          String
  model         String
  licensePlate  String
  assignedStaff Staff[]
}

model Log {
  logCode       String @id
  logDate       String
  logDetails    String
  observedImage String
  fieldCode     String
  cropCode      String

  field Field @relation(fields: [fieldCode], references: [fieldCode], onDelete: Cascade, onUpdate: Cascade)
  crop  Crop  @relation(fields: [cropCode], references: [cropCode], onDelete: Cascade, onUpdate: Cascade)

  staffLogs StaffLog[]
}

model StaffLog {
  staffId String
  logCode String

  staff Staff @relation(fields: [staffId], references: [staffId], onDelete: Cascade, onUpdate: Cascade)
  log   Log   @relation(fields: [logCode], references: [logCode], onDelete: Cascade, onUpdate: Cascade)

  @@id([staffId, logCode])
}
